{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBAAOO,UAAU,QACbC,KAAK,OACLC,MAAQV,EACRW,SAnBc,SAAER,GACxBF,EAAeE,EAAES,OAAOF,QAmBhBG,YAAa,c,+BCxBhBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGCI,MAAOF,GAHR,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAKjC,OACI,sBAAKT,UAAU,0BAAf,UACI,qBAAKuB,IAAMd,EAAMe,IAAML,IACvB,8BAAKA,EAAL,WCLCM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAACnB,IAKGoB,EDnB2BK,CAAczB,GAAlCa,EAHuB,EAG7BN,KAAcY,EAHe,EAGfA,QAKtB,OACI,qCACI,oBAAI1B,UAAU,0CAAd,SAA0DO,IAExDmB,GAAW,mBAAG1B,UAAU,wCAAb,qBAGZ,qBAAKA,UAAU,YAAf,SAGOoB,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEMnBe,EA1BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,gBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACK,qCACG,oBAAIU,UAAU,YAAd,4BACA,cAAC,EAAD,CAAaV,cAAiBA,IAC9B,uBAEA,6BAEQ4C,EAAWlB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAaA,GADPA,Y,MCZ1B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3551247.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input className=\"input\"\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n                placeholder= \"Buscar\"\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category ) => {\n   \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=12&api_key=6j67AROmQ4VoABNbVCgJqjeQQ4ETJmpN`;\n    const resp =  await fetch( url );\n    const { data } = await resp.json();\n\n    //Se realiza un map de los datos obtenidos de la respuesta de la API de Gifs\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    \n    \n\n\n    return (\n        <div className=\"card animate__bounceOut\">\n            <img src={ url } alt={ title }/>\n            <p>{ title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({ category }) => {\n\n    \n    const { data: images, loading } = useFetchGifs( category );\n  \n   \n   \n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__fadeIne\">{ category }</h3>\n\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\n            \n           \n             <div className=\"card-grid\">\n            \n                {\n                    images.map(  img => (\n                        <GifGridItem \n                        key={ img.id }\n                        { ...img } \n                        />\n                    ))\n                }\n            \n         </div> \n         </>\n\n        \n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n","import React, { useState } from 'react';\n//import { Fragment } from 'react/cjs/react.production.min';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon ball']);\n    \n    return (\n         <>\n            <h2 className=\"title_app\">Gif Expert App</h2>\n            <AddCategory setCategories ={ setCategories }/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                    <GifGrid \n                    key={ category }\n                    category =  {category }\n                    />\n                    ))\n                }\n            </ol>\n           \n\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}